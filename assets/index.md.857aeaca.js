import{o as t,c as e,a,b as n}from"./app.08934b25.js";const s='{"title":"Introduction","description":"","frontmatter":{},"headers":[{"level":2,"title":"Example","slug":"example"},{"level":2,"title":"Installation","slug":"installation"},{"level":2,"title":"Available props","slug":"available-props"},{"level":2,"title":"Events","slug":"events"},{"level":2,"title":"License","slug":"license"}],"relativePath":"index.md","lastUpdated":1615230285997}',p={},o=a("br",null,null,-1),l=a("p",null,[a("a",{href:"https://www.npmjs.com/package/vue3-persian-datepicker",target:"_blank",rel:"noopener noreferrer"},[a("img",{src:"https://img.shields.io/npm/v/vue3-persian-datepicker",alt:"npm"})])],-1),i=a("iframe",{title:"star repo",src:"https://ghbtns.com/github-btn.html?user=mohammadoftadeh&repo=vue3-persian-datepicker&type=star",frameworker:"0",scrolling:"0",width:"75px",height:"25px",frameBorder:"none"},null,-1),c=n('<h1 id="introduction"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h1><p>This persian / jalali datepicker package is implemented with vue 3, it&#39;s simple and light.</p><div class="warning custom-block"><p class="custom-block-title">NOTICE</p><p>Works only on projects with version 3.x vue.</p></div><p>All date manipulation and formatting are done via the <a href="https://github.com/babakhani/PersianDate" target="_blank" rel="noopener noreferrer">PersianDate</a> library, so it&#39;s a direct dependency of this picker.</p><h2 id="example"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example</h2><p>CodeSandBox Demo, Choose a date:</p><iframe src="https://codesandbox.io/embed/blissful-shirley-pyqiw?autoresize=1&amp;fontsize=14&amp;hidenavigation=0&amp;theme=dark&amp;view=preview" style="width:100%;height:500px;border:0;border-radius:4px;overflow:hidden;" title="vue3-persian-datepicker" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><br><br><p>Datepicker comes with less styling, but input itself does not. You can use <code>.datePicker</code> class for styling input and all elements, like:</p><div class="language-css"><pre><code><span class="token selector">.datePicker input</span> <span class="token punctuation">{</span>\n  <span class="token comment">/* add css style to the input */</span>\n<span class="token punctuation">}</span>\n</code></pre></div><h2 id="installation"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><p>This section you can installing the package with npm or yarn.</p><p><strong>Npm</strong></p><div class="language-bash"><pre><code>$ <span class="token function">npm</span> <span class="token function">install</span> vue3-persian-datepicker\n</code></pre></div><p><strong>Yarn</strong></p><div class="language-bash"><pre><code>$ <span class="token function">yarn</span> <span class="token function">add</span> vue3-persian-datepicker\n</code></pre></div><p>Then import it in your code and use as a usual component:</p><div class="language-vue"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">\n<span class="token keyword">import</span> DatePicker <span class="token keyword">from</span> <span class="token string">&quot;vue3-persian-datepicker&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">&quot;vue3-persian-datepicker/dist/datepicker.min.css&quot;</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@vue/reactivity&quot;</span><span class="token punctuation">;</span>\n\n<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token punctuation">{</span>\n  <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n      date<span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">{</span>\n      DatePicker<span class="token punctuation">,</span>\n      state<span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DatePicker</span> <span class="token attr-name">v-model</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>state.date<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>\n</code></pre></div><div class="warning custom-block"><p class="custom-block-title">NOTICE</p><p>If you use default value for <code>v-model</code>, You should act like the following format:</p></div><div class="language-js"><pre><code><span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> date<span class="token operator">:</span> <span class="token string">&quot;1399/12/16&quot;</span> <span class="token comment">// for example })</span>\n</code></pre></div><h2 id="available-props"><a class="header-anchor" href="#available-props" aria-hidden="true">#</a> Available props</h2><table><thead><tr><th style="text-align:left;">Prop</th><th style="text-align:center;">Type</th><th style="text-align:center;">Default</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">inline</td><td style="text-align:center;"><code>Boolean</code></td><td style="text-align:center;"></td><td style="text-align:left;">If <code>true</code>, the datepicker is always displayed</td></tr><tr><td style="text-align:left;">format</td><td style="text-align:center;"><code>String</code></td><td style="text-align:center;"><code>YYYY/MM/DD</code></td><td style="text-align:left;"><code>PersianDate</code>-type format in which the string in the input should be both parsed and displayed</td></tr><tr><td style="text-align:left;">name</td><td style="text-align:center;"><code>String</code></td><td style="text-align:center;"></td><td style="text-align:left;">Input name property</td></tr><tr><td style="text-align:left;">placeholder</td><td style="text-align:center;"><code>String</code></td><td style="text-align:center;"></td><td style="text-align:left;">Input placeholder text</td></tr></tbody></table><h2 id="events"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><p>These events are emitted on actions in the datepicker</p><table><thead><tr><th style="text-align:left;">Event</th><th style="text-align:center;">Output</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;">opened</td><td style="text-align:center;"></td><td style="text-align:left;">The picker is opened</td></tr><tr><td style="text-align:left;">closed</td><td style="text-align:center;"></td><td style="text-align:left;">The picker is closed</td></tr><tr><td style="text-align:left;">selected</td><td style="text-align:center;"><code>Date</code></td><td style="text-align:left;">A date has been selected</td></tr></tbody></table><h2 id="license"><a class="header-anchor" href="#license" aria-hidden="true">#</a> License</h2><p><a href="https://opensource.org/licenses/MIT" target="_blank" rel="noopener noreferrer">MIT</a></p>',28);p.render=function(a,n,s,p,r,d){return t(),e("div",null,[o,l,i,c])};export default p;export{s as __pageData};
